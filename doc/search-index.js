var searchIndex = JSON.parse('{\
"my_stack":{"doc":"","t":"ANDENLLLLLLLLLLLLLLLLLLLLLLLLL","n":["stack","Overflow","Stack","StackError","Underflow","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","from","from","into","into","is_empty","new","pop","push","size","to_string","top","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"my_stack"],[1,"my_stack::stack"],[30,"core::fmt"],[31,"core::fmt"],[32,"core::clone"],[33,"core::fmt"],[34,"alloc::string"],[35,"core::option"],[36,"core::any"]],"d":["","…","ジェネリックなスタック構造体です。","…","…","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","スタックが空かどうかを判定します。","…","…","…","スタックの現在のサイズを返します。","","…","","","","","",""],"i":[0,1,0,0,1,3,1,3,1,1,3,1,1,3,1,3,1,3,3,3,3,3,1,3,3,1,3,1,3,1],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],2],[[[3,[-1]],4],5,[6,7,8]],[[1,4],5],[[1,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],2,[6,7,8]],[9,[[3,[-1]]],[6,7,8]],[[[3,[-1]]],[[10,[-1,1]]],[6,7,8]],[[[3,[-1]],-1],[[10,[11,1]]],[6,7,8]],[[[3,[-1]]],9,[6,7,8]],[-1,12,[]],[[[3,[-1]]],[[13,[-1]]],[6,7,8]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,14,[]],[-1,14,[]]],"c":[],"p":[[4,"StackError",1],[15,"bool"],[3,"Stack",1],[3,"Formatter",30],[6,"Result",30],[8,"Default",31],[8,"Clone",32],[8,"Debug",30],[15,"usize"],[4,"Result",33],[15,"tuple"],[3,"String",34],[4,"Option",35],[3,"TypeId",36]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
